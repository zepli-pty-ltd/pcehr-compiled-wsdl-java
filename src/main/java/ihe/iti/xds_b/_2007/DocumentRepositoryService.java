
package ihe.iti.xds_b._2007;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DocumentRepository_Service", targetNamespace = "urn:ihe:iti:xds-b:2007", wsdlLocation = "wsdl/B2B_DocumentRepository.wsdl")
public class DocumentRepositoryService
    extends Service
{

    private final static URL DOCUMENTREPOSITORYSERVICE_WSDL_LOCATION;
    private final static WebServiceException DOCUMENTREPOSITORYSERVICE_EXCEPTION;
    private final static QName DOCUMENTREPOSITORYSERVICE_QNAME = new QName("urn:ihe:iti:xds-b:2007", "DocumentRepository_Service");

    static {
        DOCUMENTREPOSITORYSERVICE_WSDL_LOCATION = ihe.iti.xds_b._2007.DocumentRepositoryService.class.getResource("wsdl/B2B_DocumentRepository.wsdl");
        WebServiceException e = null;
        if (DOCUMENTREPOSITORYSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'wsdl/B2B_DocumentRepository.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        DOCUMENTREPOSITORYSERVICE_EXCEPTION = e;
    }

    public DocumentRepositoryService() {
        super(__getWsdlLocation(), DOCUMENTREPOSITORYSERVICE_QNAME);
    }

    public DocumentRepositoryService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DOCUMENTREPOSITORYSERVICE_QNAME, features);
    }

    public DocumentRepositoryService(URL wsdlLocation) {
        super(wsdlLocation, DOCUMENTREPOSITORYSERVICE_QNAME);
    }

    public DocumentRepositoryService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DOCUMENTREPOSITORYSERVICE_QNAME, features);
    }

    public DocumentRepositoryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DocumentRepositoryService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DocumentRepositoryPortType
     */
    @WebEndpoint(name = "DocumentRepository_Port_Soap12")
    public DocumentRepositoryPortType getDocumentRepositoryPortSoap12() {
        return super.getPort(new QName("urn:ihe:iti:xds-b:2007", "DocumentRepository_Port_Soap12"), DocumentRepositoryPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DocumentRepositoryPortType
     */
    @WebEndpoint(name = "DocumentRepository_Port_Soap12")
    public DocumentRepositoryPortType getDocumentRepositoryPortSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("urn:ihe:iti:xds-b:2007", "DocumentRepository_Port_Soap12"), DocumentRepositoryPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DOCUMENTREPOSITORYSERVICE_EXCEPTION!= null) {
            throw DOCUMENTREPOSITORYSERVICE_EXCEPTION;
        }
        return DOCUMENTREPOSITORYSERVICE_WSDL_LOCATION;
    }

}
